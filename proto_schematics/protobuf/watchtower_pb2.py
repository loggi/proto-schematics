# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: watchtower.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2
from google.protobuf import duration_pb2 as google_dot_protobuf_dot_duration__pb2
from google.protobuf import wrappers_pb2 as google_dot_protobuf_dot_wrappers__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='watchtower.proto',
  package='watchtower',
  syntax='proto3',
  serialized_pb=_b('\n\x10watchtower.proto\x12\nwatchtower\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1egoogle/protobuf/duration.proto\x1a\x1egoogle/protobuf/wrappers.proto\"\x16\n\x08\x44riverId\x12\n\n\x02id\x18\x01 \x01(\x05\"\x84\x08\n\x0c\x44riverStatus\x12\n\n\x02id\x18\x01 \x01(\x05\x12\x0c\n\x04\x63ity\x18\x02 \x01(\t\x12\x16\n\x0etransport_type\x18\x03 \x01(\t\x12\x10\n\x08location\x18\x04 \x03(\x01\x12-\n\tavailable\x18\x05 \x01(\x0b\x32\x1a.google.protobuf.BoolValue\x12(\n\x04\x62usy\x18\x06 \x01(\x0b\x32\x1a.google.protobuf.BoolValue\x12\x0e\n\x06\x61\x63tive\x18$ \x01(\x08\x12\x32\n\x0e\x61ttend_classic\x18\x07 \x01(\x0b\x32\x1a.google.protobuf.BoolValue\x12.\n\nattend_pro\x18\x08 \x01(\x0b\x32\x1a.google.protobuf.BoolValue\x12\x31\n\rattend_retail\x18\t \x01(\x0b\x32\x1a.google.protobuf.BoolValue\x12/\n\x0b\x61ttend_food\x18\n \x01(\x0b\x32\x1a.google.protobuf.BoolValue\x12.\n\nattend_pay\x18\x0b \x01(\x0b\x32\x1a.google.protobuf.BoolValue\x12\x33\n\x0fhas_grand_trunk\x18\x0c \x01(\x0b\x32\x1a.google.protobuf.BoolValue\x12\x13\n\x0b\x61pp_version\x18\r \x01(\x05\x12\x17\n\x0f\x63urrent_gateway\x18\x0e \x01(\x05\x12+\n\x07\x63reated\x18\x0f \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12+\n\x07updated\x18\x10 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12-\n\ttimestamp\x18\x11 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12-\n\ntime_drift\x18\x12 \x01(\x0b\x32\x19.google.protobuf.Duration\x12\x11\n\tfull_name\x18\x13 \x01(\t\x12\x12\n\nconfidence\x18\x14 \x01(\x01\x12\x10\n\x08\x61\x63\x63uracy\x18\x15 \x01(\x01\x12\x0f\n\x07\x62\x65\x61ring\x18\x16 \x01(\x01\x12\r\n\x05speed\x18\x17 \x01(\x01\x12\x12\n\nsatellites\x18\x18 \x01(\x05\x12\x17\n\x0fnetwork_carrier\x18\x19 \x01(\t\x12\x17\n\x0f\x63onnection_type\x18\x1a \x01(\x05\x12\x0f\n\x07handset\x18\x1b \x01(\t\x12\n\n\x02os\x18\x1c \x01(\t\x12\x12\n\nos_version\x18\x1d \x01(\t\x12\x0f\n\x07\x62\x61ttery\x18\x1e \x01(\x05\x12\x0e\n\x06pinpad\x18\x1f \x01(\t\x12\x1a\n\x12\x64istance_reference\x18! \x03(\x01\x12\x10\n\x08\x64istance\x18\" \x01(\x01\x12\x15\n\rdistance_unit\x18# \x01(\t\"<\n\x10\x44riverStatusList\x12(\n\x06status\x18\x01 \x03(\x0b\x32\x18.watchtower.DriverStatus\"\xab\x02\n\x13\x44riverStatusFilters\x12$\n\x02\x65q\x18\x01 \x01(\x0b\x32\x18.watchtower.DriverStatus\x12%\n\x03not\x18\x02 \x01(\x0b\x32\x18.watchtower.DriverStatus\x12$\n\x02gt\x18\x03 \x01(\x0b\x32\x18.watchtower.DriverStatus\x12$\n\x02lt\x18\x04 \x01(\x0b\x32\x18.watchtower.DriverStatus\x12%\n\x07include\x18\x05 \x03(\x0b\x32\x14.watchtower.DriverId\x12%\n\x07\x65xclude\x18\x06 \x03(\x0b\x32\x14.watchtower.DriverId\x12\x0e\n\x06origin\x18\x07 \x03(\x01\x12\x0e\n\x06radius\x18\x08 \x01(\x01\x12\r\n\x05limit\x18\t \x01(\x05\"\xea\x02\n\nOrderOffer\x12\n\n\x02id\x18\x01 \x01(\t\x12\x0c\n\x04\x63ity\x18\x02 \x01(\t\x12\x16\n\x0etransport_type\x18\x03 \x01(\t\x12\x0e\n\x06origin\x18\x04 \x03(\x01\x12\x12\n\nis_classic\x18\x05 \x01(\x08\x12\x0e\n\x06is_pro\x18\x06 \x01(\x08\x12\x11\n\tis_retail\x18\x07 \x01(\x08\x12\x0f\n\x07is_food\x18\x08 \x01(\x08\x12\x0e\n\x06is_pay\x18\t \x01(\x08\x12\x16\n\x0eis_grand_trunk\x18\n \x01(\x08\x12\x37\n\x0e\x64river_filters\x18\x0b \x01(\x0b\x32\x1f.watchtower.DriverStatusFilters\x12\r\n\x05round\x18\x0c \x01(\x05\x12\x0f\n\x07restart\x18\r \x01(\x08\x12 \n\x18\x63onsecutive_empty_rounds\x18\x0e \x01(\x05\x12/\n\relection_type\x18\x0f \x01(\x0e\x32\x18.watchtower.ElectionType\"n\n\x17OrderOfferRoundResponse\x12%\n\x05offer\x18\x01 \x01(\x0b\x32\x16.watchtower.OrderOffer\x12,\n\ncandidates\x18\x02 \x03(\x0b\x32\x18.watchtower.DriverStatus*\'\n\x0c\x45lectionType\x12\x0b\n\x07NEAREST\x10\x00\x12\n\n\x06RANDOM\x10\x01\x32\x84\x05\n\nWatchTower\x12\x43\n\x0fGetDriverStatus\x12\x14.watchtower.DriverId\x1a\x18.watchtower.DriverStatus\"\x00\x12G\n\x0fSetDriverStatus\x12\x18.watchtower.DriverStatus\x1a\x18.watchtower.DriverStatus\"\x00\x12I\n\x11PatchDriverStatus\x12\x18.watchtower.DriverStatus\x1a\x18.watchtower.DriverStatus\"\x00\x12S\n\x10ListDriverStatus\x12\x1f.watchtower.DriverStatusFilters\x1a\x1c.watchtower.DriverStatusList\"\x00\x12U\n\x12\x44\x65leteDriverStatus\x12\x1f.watchtower.DriverStatusFilters\x1a\x1c.watchtower.DriverStatusList\"\x00\x12M\n\x13ListOfferCandidates\x12\x16.watchtower.OrderOffer\x1a\x1c.watchtower.DriverStatusList\"\x00\x12R\n\x18ListOfferRoundCandidates\x12\x16.watchtower.OrderOffer\x1a\x1c.watchtower.DriverStatusList\"\x00\x12N\n\rRunOfferRound\x12\x16.watchtower.OrderOffer\x1a#.watchtower.OrderOfferRoundResponse\"\x00\x62\x06proto3')
  ,
  dependencies=[google_dot_protobuf_dot_timestamp__pb2.DESCRIPTOR,google_dot_protobuf_dot_duration__pb2.DESCRIPTOR,google_dot_protobuf_dot_wrappers__pb2.DESCRIPTOR,])

_ELECTIONTYPE = _descriptor.EnumDescriptor(
  name='ElectionType',
  full_name='watchtower.ElectionType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='NEAREST', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RANDOM', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=2025,
  serialized_end=2064,
)
_sym_db.RegisterEnumDescriptor(_ELECTIONTYPE)

ElectionType = enum_type_wrapper.EnumTypeWrapper(_ELECTIONTYPE)
NEAREST = 0
RANDOM = 1



_DRIVERID = _descriptor.Descriptor(
  name='DriverId',
  full_name='watchtower.DriverId',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='watchtower.DriverId.id', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=129,
  serialized_end=151,
)


_DRIVERSTATUS = _descriptor.Descriptor(
  name='DriverStatus',
  full_name='watchtower.DriverStatus',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='watchtower.DriverStatus.id', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='city', full_name='watchtower.DriverStatus.city', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='transport_type', full_name='watchtower.DriverStatus.transport_type', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='location', full_name='watchtower.DriverStatus.location', index=3,
      number=4, type=1, cpp_type=5, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='available', full_name='watchtower.DriverStatus.available', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='busy', full_name='watchtower.DriverStatus.busy', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='active', full_name='watchtower.DriverStatus.active', index=6,
      number=36, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='attend_classic', full_name='watchtower.DriverStatus.attend_classic', index=7,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='attend_pro', full_name='watchtower.DriverStatus.attend_pro', index=8,
      number=8, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='attend_retail', full_name='watchtower.DriverStatus.attend_retail', index=9,
      number=9, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='attend_food', full_name='watchtower.DriverStatus.attend_food', index=10,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='attend_pay', full_name='watchtower.DriverStatus.attend_pay', index=11,
      number=11, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='has_grand_trunk', full_name='watchtower.DriverStatus.has_grand_trunk', index=12,
      number=12, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='app_version', full_name='watchtower.DriverStatus.app_version', index=13,
      number=13, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='current_gateway', full_name='watchtower.DriverStatus.current_gateway', index=14,
      number=14, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='created', full_name='watchtower.DriverStatus.created', index=15,
      number=15, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='updated', full_name='watchtower.DriverStatus.updated', index=16,
      number=16, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='timestamp', full_name='watchtower.DriverStatus.timestamp', index=17,
      number=17, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='time_drift', full_name='watchtower.DriverStatus.time_drift', index=18,
      number=18, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='full_name', full_name='watchtower.DriverStatus.full_name', index=19,
      number=19, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='confidence', full_name='watchtower.DriverStatus.confidence', index=20,
      number=20, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='accuracy', full_name='watchtower.DriverStatus.accuracy', index=21,
      number=21, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='bearing', full_name='watchtower.DriverStatus.bearing', index=22,
      number=22, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='speed', full_name='watchtower.DriverStatus.speed', index=23,
      number=23, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='satellites', full_name='watchtower.DriverStatus.satellites', index=24,
      number=24, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='network_carrier', full_name='watchtower.DriverStatus.network_carrier', index=25,
      number=25, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='connection_type', full_name='watchtower.DriverStatus.connection_type', index=26,
      number=26, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='handset', full_name='watchtower.DriverStatus.handset', index=27,
      number=27, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='os', full_name='watchtower.DriverStatus.os', index=28,
      number=28, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='os_version', full_name='watchtower.DriverStatus.os_version', index=29,
      number=29, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='battery', full_name='watchtower.DriverStatus.battery', index=30,
      number=30, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='pinpad', full_name='watchtower.DriverStatus.pinpad', index=31,
      number=31, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='distance_reference', full_name='watchtower.DriverStatus.distance_reference', index=32,
      number=33, type=1, cpp_type=5, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='distance', full_name='watchtower.DriverStatus.distance', index=33,
      number=34, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='distance_unit', full_name='watchtower.DriverStatus.distance_unit', index=34,
      number=35, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=154,
  serialized_end=1182,
)


_DRIVERSTATUSLIST = _descriptor.Descriptor(
  name='DriverStatusList',
  full_name='watchtower.DriverStatusList',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='watchtower.DriverStatusList.status', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1184,
  serialized_end=1244,
)


_DRIVERSTATUSFILTERS = _descriptor.Descriptor(
  name='DriverStatusFilters',
  full_name='watchtower.DriverStatusFilters',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='eq', full_name='watchtower.DriverStatusFilters.eq', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='not', full_name='watchtower.DriverStatusFilters.not', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='gt', full_name='watchtower.DriverStatusFilters.gt', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='lt', full_name='watchtower.DriverStatusFilters.lt', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='include', full_name='watchtower.DriverStatusFilters.include', index=4,
      number=5, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='exclude', full_name='watchtower.DriverStatusFilters.exclude', index=5,
      number=6, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='origin', full_name='watchtower.DriverStatusFilters.origin', index=6,
      number=7, type=1, cpp_type=5, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='radius', full_name='watchtower.DriverStatusFilters.radius', index=7,
      number=8, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='limit', full_name='watchtower.DriverStatusFilters.limit', index=8,
      number=9, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1247,
  serialized_end=1546,
)


_ORDEROFFER = _descriptor.Descriptor(
  name='OrderOffer',
  full_name='watchtower.OrderOffer',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='watchtower.OrderOffer.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='city', full_name='watchtower.OrderOffer.city', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='transport_type', full_name='watchtower.OrderOffer.transport_type', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='origin', full_name='watchtower.OrderOffer.origin', index=3,
      number=4, type=1, cpp_type=5, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='is_classic', full_name='watchtower.OrderOffer.is_classic', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='is_pro', full_name='watchtower.OrderOffer.is_pro', index=5,
      number=6, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='is_retail', full_name='watchtower.OrderOffer.is_retail', index=6,
      number=7, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='is_food', full_name='watchtower.OrderOffer.is_food', index=7,
      number=8, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='is_pay', full_name='watchtower.OrderOffer.is_pay', index=8,
      number=9, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='is_grand_trunk', full_name='watchtower.OrderOffer.is_grand_trunk', index=9,
      number=10, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='driver_filters', full_name='watchtower.OrderOffer.driver_filters', index=10,
      number=11, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='round', full_name='watchtower.OrderOffer.round', index=11,
      number=12, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='restart', full_name='watchtower.OrderOffer.restart', index=12,
      number=13, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='consecutive_empty_rounds', full_name='watchtower.OrderOffer.consecutive_empty_rounds', index=13,
      number=14, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='election_type', full_name='watchtower.OrderOffer.election_type', index=14,
      number=15, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1549,
  serialized_end=1911,
)


_ORDEROFFERROUNDRESPONSE = _descriptor.Descriptor(
  name='OrderOfferRoundResponse',
  full_name='watchtower.OrderOfferRoundResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='offer', full_name='watchtower.OrderOfferRoundResponse.offer', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='candidates', full_name='watchtower.OrderOfferRoundResponse.candidates', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1913,
  serialized_end=2023,
)

_DRIVERSTATUS.fields_by_name['available'].message_type = google_dot_protobuf_dot_wrappers__pb2._BOOLVALUE
_DRIVERSTATUS.fields_by_name['busy'].message_type = google_dot_protobuf_dot_wrappers__pb2._BOOLVALUE
_DRIVERSTATUS.fields_by_name['attend_classic'].message_type = google_dot_protobuf_dot_wrappers__pb2._BOOLVALUE
_DRIVERSTATUS.fields_by_name['attend_pro'].message_type = google_dot_protobuf_dot_wrappers__pb2._BOOLVALUE
_DRIVERSTATUS.fields_by_name['attend_retail'].message_type = google_dot_protobuf_dot_wrappers__pb2._BOOLVALUE
_DRIVERSTATUS.fields_by_name['attend_food'].message_type = google_dot_protobuf_dot_wrappers__pb2._BOOLVALUE
_DRIVERSTATUS.fields_by_name['attend_pay'].message_type = google_dot_protobuf_dot_wrappers__pb2._BOOLVALUE
_DRIVERSTATUS.fields_by_name['has_grand_trunk'].message_type = google_dot_protobuf_dot_wrappers__pb2._BOOLVALUE
_DRIVERSTATUS.fields_by_name['created'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_DRIVERSTATUS.fields_by_name['updated'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_DRIVERSTATUS.fields_by_name['timestamp'].message_type = google_dot_protobuf_dot_timestamp__pb2._TIMESTAMP
_DRIVERSTATUS.fields_by_name['time_drift'].message_type = google_dot_protobuf_dot_duration__pb2._DURATION
_DRIVERSTATUSLIST.fields_by_name['status'].message_type = _DRIVERSTATUS
_DRIVERSTATUSFILTERS.fields_by_name['eq'].message_type = _DRIVERSTATUS
_DRIVERSTATUSFILTERS.fields_by_name['not'].message_type = _DRIVERSTATUS
_DRIVERSTATUSFILTERS.fields_by_name['gt'].message_type = _DRIVERSTATUS
_DRIVERSTATUSFILTERS.fields_by_name['lt'].message_type = _DRIVERSTATUS
_DRIVERSTATUSFILTERS.fields_by_name['include'].message_type = _DRIVERID
_DRIVERSTATUSFILTERS.fields_by_name['exclude'].message_type = _DRIVERID
_ORDEROFFER.fields_by_name['driver_filters'].message_type = _DRIVERSTATUSFILTERS
_ORDEROFFER.fields_by_name['election_type'].enum_type = _ELECTIONTYPE
_ORDEROFFERROUNDRESPONSE.fields_by_name['offer'].message_type = _ORDEROFFER
_ORDEROFFERROUNDRESPONSE.fields_by_name['candidates'].message_type = _DRIVERSTATUS
DESCRIPTOR.message_types_by_name['DriverId'] = _DRIVERID
DESCRIPTOR.message_types_by_name['DriverStatus'] = _DRIVERSTATUS
DESCRIPTOR.message_types_by_name['DriverStatusList'] = _DRIVERSTATUSLIST
DESCRIPTOR.message_types_by_name['DriverStatusFilters'] = _DRIVERSTATUSFILTERS
DESCRIPTOR.message_types_by_name['OrderOffer'] = _ORDEROFFER
DESCRIPTOR.message_types_by_name['OrderOfferRoundResponse'] = _ORDEROFFERROUNDRESPONSE
DESCRIPTOR.enum_types_by_name['ElectionType'] = _ELECTIONTYPE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

DriverId = _reflection.GeneratedProtocolMessageType('DriverId', (_message.Message,), dict(
  DESCRIPTOR = _DRIVERID,
  __module__ = 'watchtower_pb2'
  # @@protoc_insertion_point(class_scope:watchtower.DriverId)
  ))
_sym_db.RegisterMessage(DriverId)

DriverStatus = _reflection.GeneratedProtocolMessageType('DriverStatus', (_message.Message,), dict(
  DESCRIPTOR = _DRIVERSTATUS,
  __module__ = 'watchtower_pb2'
  # @@protoc_insertion_point(class_scope:watchtower.DriverStatus)
  ))
_sym_db.RegisterMessage(DriverStatus)

DriverStatusList = _reflection.GeneratedProtocolMessageType('DriverStatusList', (_message.Message,), dict(
  DESCRIPTOR = _DRIVERSTATUSLIST,
  __module__ = 'watchtower_pb2'
  # @@protoc_insertion_point(class_scope:watchtower.DriverStatusList)
  ))
_sym_db.RegisterMessage(DriverStatusList)

DriverStatusFilters = _reflection.GeneratedProtocolMessageType('DriverStatusFilters', (_message.Message,), dict(
  DESCRIPTOR = _DRIVERSTATUSFILTERS,
  __module__ = 'watchtower_pb2'
  # @@protoc_insertion_point(class_scope:watchtower.DriverStatusFilters)
  ))
_sym_db.RegisterMessage(DriverStatusFilters)

OrderOffer = _reflection.GeneratedProtocolMessageType('OrderOffer', (_message.Message,), dict(
  DESCRIPTOR = _ORDEROFFER,
  __module__ = 'watchtower_pb2'
  # @@protoc_insertion_point(class_scope:watchtower.OrderOffer)
  ))
_sym_db.RegisterMessage(OrderOffer)

OrderOfferRoundResponse = _reflection.GeneratedProtocolMessageType('OrderOfferRoundResponse', (_message.Message,), dict(
  DESCRIPTOR = _ORDEROFFERROUNDRESPONSE,
  __module__ = 'watchtower_pb2'
  # @@protoc_insertion_point(class_scope:watchtower.OrderOfferRoundResponse)
  ))
_sym_db.RegisterMessage(OrderOfferRoundResponse)


try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities


  class WatchTowerStub(object):
    """Server exported interface
    """

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.GetDriverStatus = channel.unary_unary(
          '/watchtower.WatchTower/GetDriverStatus',
          request_serializer=DriverId.SerializeToString,
          response_deserializer=DriverStatus.FromString,
          )
      self.SetDriverStatus = channel.unary_unary(
          '/watchtower.WatchTower/SetDriverStatus',
          request_serializer=DriverStatus.SerializeToString,
          response_deserializer=DriverStatus.FromString,
          )
      self.PatchDriverStatus = channel.unary_unary(
          '/watchtower.WatchTower/PatchDriverStatus',
          request_serializer=DriverStatus.SerializeToString,
          response_deserializer=DriverStatus.FromString,
          )
      self.ListDriverStatus = channel.unary_unary(
          '/watchtower.WatchTower/ListDriverStatus',
          request_serializer=DriverStatusFilters.SerializeToString,
          response_deserializer=DriverStatusList.FromString,
          )
      self.DeleteDriverStatus = channel.unary_unary(
          '/watchtower.WatchTower/DeleteDriverStatus',
          request_serializer=DriverStatusFilters.SerializeToString,
          response_deserializer=DriverStatusList.FromString,
          )
      self.ListOfferCandidates = channel.unary_unary(
          '/watchtower.WatchTower/ListOfferCandidates',
          request_serializer=OrderOffer.SerializeToString,
          response_deserializer=DriverStatusList.FromString,
          )
      self.ListOfferRoundCandidates = channel.unary_unary(
          '/watchtower.WatchTower/ListOfferRoundCandidates',
          request_serializer=OrderOffer.SerializeToString,
          response_deserializer=DriverStatusList.FromString,
          )
      self.RunOfferRound = channel.unary_unary(
          '/watchtower.WatchTower/RunOfferRound',
          request_serializer=OrderOffer.SerializeToString,
          response_deserializer=OrderOfferRoundResponse.FromString,
          )


  class WatchTowerServicer(object):
    """Server exported interface
    """

    def GetDriverStatus(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def SetDriverStatus(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def PatchDriverStatus(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def ListDriverStatus(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def DeleteDriverStatus(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def ListOfferCandidates(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def ListOfferRoundCandidates(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def RunOfferRound(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_WatchTowerServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'GetDriverStatus': grpc.unary_unary_rpc_method_handler(
            servicer.GetDriverStatus,
            request_deserializer=DriverId.FromString,
            response_serializer=DriverStatus.SerializeToString,
        ),
        'SetDriverStatus': grpc.unary_unary_rpc_method_handler(
            servicer.SetDriverStatus,
            request_deserializer=DriverStatus.FromString,
            response_serializer=DriverStatus.SerializeToString,
        ),
        'PatchDriverStatus': grpc.unary_unary_rpc_method_handler(
            servicer.PatchDriverStatus,
            request_deserializer=DriverStatus.FromString,
            response_serializer=DriverStatus.SerializeToString,
        ),
        'ListDriverStatus': grpc.unary_unary_rpc_method_handler(
            servicer.ListDriverStatus,
            request_deserializer=DriverStatusFilters.FromString,
            response_serializer=DriverStatusList.SerializeToString,
        ),
        'DeleteDriverStatus': grpc.unary_unary_rpc_method_handler(
            servicer.DeleteDriverStatus,
            request_deserializer=DriverStatusFilters.FromString,
            response_serializer=DriverStatusList.SerializeToString,
        ),
        'ListOfferCandidates': grpc.unary_unary_rpc_method_handler(
            servicer.ListOfferCandidates,
            request_deserializer=OrderOffer.FromString,
            response_serializer=DriverStatusList.SerializeToString,
        ),
        'ListOfferRoundCandidates': grpc.unary_unary_rpc_method_handler(
            servicer.ListOfferRoundCandidates,
            request_deserializer=OrderOffer.FromString,
            response_serializer=DriverStatusList.SerializeToString,
        ),
        'RunOfferRound': grpc.unary_unary_rpc_method_handler(
            servicer.RunOfferRound,
            request_deserializer=OrderOffer.FromString,
            response_serializer=OrderOfferRoundResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'watchtower.WatchTower', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class BetaWatchTowerServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    """Server exported interface
    """
    def GetDriverStatus(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def SetDriverStatus(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def PatchDriverStatus(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def ListDriverStatus(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def DeleteDriverStatus(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def ListOfferCandidates(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def ListOfferRoundCandidates(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def RunOfferRound(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaWatchTowerStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    """Server exported interface
    """
    def GetDriverStatus(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetDriverStatus.future = None
    def SetDriverStatus(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    SetDriverStatus.future = None
    def PatchDriverStatus(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    PatchDriverStatus.future = None
    def ListDriverStatus(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    ListDriverStatus.future = None
    def DeleteDriverStatus(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    DeleteDriverStatus.future = None
    def ListOfferCandidates(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    ListOfferCandidates.future = None
    def ListOfferRoundCandidates(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    ListOfferRoundCandidates.future = None
    def RunOfferRound(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    RunOfferRound.future = None


  def beta_create_WatchTower_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('watchtower.WatchTower', 'DeleteDriverStatus'): DriverStatusFilters.FromString,
      ('watchtower.WatchTower', 'GetDriverStatus'): DriverId.FromString,
      ('watchtower.WatchTower', 'ListDriverStatus'): DriverStatusFilters.FromString,
      ('watchtower.WatchTower', 'ListOfferCandidates'): OrderOffer.FromString,
      ('watchtower.WatchTower', 'ListOfferRoundCandidates'): OrderOffer.FromString,
      ('watchtower.WatchTower', 'PatchDriverStatus'): DriverStatus.FromString,
      ('watchtower.WatchTower', 'RunOfferRound'): OrderOffer.FromString,
      ('watchtower.WatchTower', 'SetDriverStatus'): DriverStatus.FromString,
    }
    response_serializers = {
      ('watchtower.WatchTower', 'DeleteDriverStatus'): DriverStatusList.SerializeToString,
      ('watchtower.WatchTower', 'GetDriverStatus'): DriverStatus.SerializeToString,
      ('watchtower.WatchTower', 'ListDriverStatus'): DriverStatusList.SerializeToString,
      ('watchtower.WatchTower', 'ListOfferCandidates'): DriverStatusList.SerializeToString,
      ('watchtower.WatchTower', 'ListOfferRoundCandidates'): DriverStatusList.SerializeToString,
      ('watchtower.WatchTower', 'PatchDriverStatus'): DriverStatus.SerializeToString,
      ('watchtower.WatchTower', 'RunOfferRound'): OrderOfferRoundResponse.SerializeToString,
      ('watchtower.WatchTower', 'SetDriverStatus'): DriverStatus.SerializeToString,
    }
    method_implementations = {
      ('watchtower.WatchTower', 'DeleteDriverStatus'): face_utilities.unary_unary_inline(servicer.DeleteDriverStatus),
      ('watchtower.WatchTower', 'GetDriverStatus'): face_utilities.unary_unary_inline(servicer.GetDriverStatus),
      ('watchtower.WatchTower', 'ListDriverStatus'): face_utilities.unary_unary_inline(servicer.ListDriverStatus),
      ('watchtower.WatchTower', 'ListOfferCandidates'): face_utilities.unary_unary_inline(servicer.ListOfferCandidates),
      ('watchtower.WatchTower', 'ListOfferRoundCandidates'): face_utilities.unary_unary_inline(servicer.ListOfferRoundCandidates),
      ('watchtower.WatchTower', 'PatchDriverStatus'): face_utilities.unary_unary_inline(servicer.PatchDriverStatus),
      ('watchtower.WatchTower', 'RunOfferRound'): face_utilities.unary_unary_inline(servicer.RunOfferRound),
      ('watchtower.WatchTower', 'SetDriverStatus'): face_utilities.unary_unary_inline(servicer.SetDriverStatus),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_WatchTower_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('watchtower.WatchTower', 'DeleteDriverStatus'): DriverStatusFilters.SerializeToString,
      ('watchtower.WatchTower', 'GetDriverStatus'): DriverId.SerializeToString,
      ('watchtower.WatchTower', 'ListDriverStatus'): DriverStatusFilters.SerializeToString,
      ('watchtower.WatchTower', 'ListOfferCandidates'): OrderOffer.SerializeToString,
      ('watchtower.WatchTower', 'ListOfferRoundCandidates'): OrderOffer.SerializeToString,
      ('watchtower.WatchTower', 'PatchDriverStatus'): DriverStatus.SerializeToString,
      ('watchtower.WatchTower', 'RunOfferRound'): OrderOffer.SerializeToString,
      ('watchtower.WatchTower', 'SetDriverStatus'): DriverStatus.SerializeToString,
    }
    response_deserializers = {
      ('watchtower.WatchTower', 'DeleteDriverStatus'): DriverStatusList.FromString,
      ('watchtower.WatchTower', 'GetDriverStatus'): DriverStatus.FromString,
      ('watchtower.WatchTower', 'ListDriverStatus'): DriverStatusList.FromString,
      ('watchtower.WatchTower', 'ListOfferCandidates'): DriverStatusList.FromString,
      ('watchtower.WatchTower', 'ListOfferRoundCandidates'): DriverStatusList.FromString,
      ('watchtower.WatchTower', 'PatchDriverStatus'): DriverStatus.FromString,
      ('watchtower.WatchTower', 'RunOfferRound'): OrderOfferRoundResponse.FromString,
      ('watchtower.WatchTower', 'SetDriverStatus'): DriverStatus.FromString,
    }
    cardinalities = {
      'DeleteDriverStatus': cardinality.Cardinality.UNARY_UNARY,
      'GetDriverStatus': cardinality.Cardinality.UNARY_UNARY,
      'ListDriverStatus': cardinality.Cardinality.UNARY_UNARY,
      'ListOfferCandidates': cardinality.Cardinality.UNARY_UNARY,
      'ListOfferRoundCandidates': cardinality.Cardinality.UNARY_UNARY,
      'PatchDriverStatus': cardinality.Cardinality.UNARY_UNARY,
      'RunOfferRound': cardinality.Cardinality.UNARY_UNARY,
      'SetDriverStatus': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'watchtower.WatchTower', cardinalities, options=stub_options)
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
